import { GitHubService } from '../githubService';
import { Octokit } from '@octokit/rest';

jest.mock('@octokit/rest');

describe('GitHubService', () => {
  let githubService: GitHubService;
  let mockOctokit: jest.Mocked<Octokit>;

  beforeEach(() => {
    mockOctokit = new Octokit() as jest.Mocked<Octokit>;
    (mockOctokit as any).repos = {
      get: jest.fn(),
      getContent: jest.fn(),
    };
    githubService = new GitHubService();
    (githubService as any).octokit = mockOctokit;
  });

  it('should fetch repository data successfully', async () => {
    const mockRepoData = {
      id: 1,
      node_id: 'node1',
      name: 'test-repo',
      full_name: 'test-owner/test-repo',
      owner: {
        login: 'test-owner',
        id: 1,
        node_id: 'owner1',
        avatar_url: 'https://example.com/avatar.png',
        url: 'https://api.github.com/users/test-owner',
        html_url: 'https://github.com/test-owner',
        type: 'User',
        gravatar_id: null,
        followers_url: 'https://api.github.com/users/test-owner/followers',
        following_url: 'https://api.github.com/users/test-owner/following{/other_user}',
        gists_url: 'https://api.github.com/users/test-owner/gists{/gist_id}',
        starred_url: 'https://api.github.com/users/test-owner/starred{/owner}{/repo}',
        subscriptions_url: 'https://api.github.com/users/test-owner/subscriptions',
        organizations_url: 'https://api.github.com/users/test-owner/orgs',
        repos_url: 'https://api.github.com/users/test-owner/repos',
        events_url: 'https://api.github.com/users/test-owner/events{/privacy}',
        received_events_url: 'https://api.github.com/users/test-owner/received_events',
        site_admin: false,
      },
      private: false,
      html_url: 'https://github.com/test-owner/test-repo',
      fork: false,
      url: 'https://api.github.com/repos/test-owner/test-repo',
      archive_url: 'https://api.github.com/repos/test-owner/test-repo/{archive_format}{/ref}',
      assignees_url: 'https://api.github.com/repos/test-owner/test-repo/assignees{/user}',
      blobs_url: 'https://api.github.com/repos/test-owner/test-repo/git/blobs{/sha}',
      branches_url: 'https://api.github.com/repos/test-owner/test-repo/branches{/branch}',
      collaborators_url: 'https://api.github.com/repos/test-owner/test-repo/collaborators{/collaborator}',
      comments_url: 'https://api.github.com/repos/test-owner/test-repo/comments{/number}',
      commits_url: 'https://api.github.com/repos/test-owner/test-repo/commits{/sha}',
      compare_url: 'https://api.github.com/repos/test-owner/test-repo/compare/{base}...{head}',
      contents_url: 'https://api.github.com/repos/test-owner/test-repo/contents/{+path}',
      contributors_url: 'https://api.github.com/repos/test-owner/test-repo/contributors',
      deployments_url: 'https://api.github.com/repos/test-owner/test-repo/deployments',
      downloads_url: 'https://api.github.com/repos/test-owner/test-repo/downloads',
      events_url: 'https://api.github.com/repos/test-owner/test-repo/events',
      forks_url: 'https://api.github.com/repos/test-owner/test-repo/forks',
      git_commits_url: 'https://api.github.com/repos/test-owner/test-repo/git/commits{/sha}',
      git_refs_url: 'https://api.github.com/repos/test-owner/test-repo/git/refs{/sha}',
      git_tags_url: 'https://api.github.com/repos/test-owner/test-repo/git/tags{/sha}',
      git_url: 'git://github.com/test-owner/test-repo.git',
      issue_comment_url: 'https://api.github.com/repos/test-owner/test-repo/issues/comments{/number}',
      issue_events_url: 'https://api.github.com/repos/test-owner/test-repo/issues/events{/number}',
      issues_url: 'https://api.github.com/repos/test-owner/test-repo/issues{/number}',
      keys_url: 'https://api.github.com/repos/test-owner/test-repo/keys{/key_id}',
      labels_url: 'https://api.github.com/repos/test-owner/test-repo/labels{/name}',
      languages_url: 'https://api.github.com/repos/test-owner/test-repo/languages',
      merges_url: 'https://api.github.com/repos/test-owner/test-repo/merges',
      milestones_url: 'https://api.github.com/repos/test-owner/test-repo/milestones{/number}',
      notifications_url: 'https://api.github.com/repos/test-owner/test-repo/notifications{?since,all,participating}',
      pulls_url: 'https://api.github.com/repos/test-owner/test-repo/pulls{/number}',
      releases_url: 'https://api.github.com/repos/test-owner/test-repo/releases{/id}',
      ssh_url: 'git@github.com:test-owner/test-repo.git',
      stargazers_url: 'https://api.github.com/repos/test-owner/test-repo/stargazers',
      statuses_url: 'https://api.github.com/repos/test-owner/test-repo/statuses/{sha}',
      subscribers_url: 'https://api.github.com/repos/test-owner/test-repo/subscribers',
      subscription_url: 'https://api.github.com/repos/test-owner/test-repo/subscription',
      tags_url: 'https://api.github.com/repos/test-owner/test-repo/tags',
      teams_url: 'https://api.github.com/repos/test-owner/test-repo/teams',
      trees_url: 'https://api.github.com/repos/test-owner/test-repo/git/trees{/sha}',
      clone_url: 'https://github.com/test-owner/test-repo.git',
      mirror_url: null,
      hooks_url: 'https://api.github.com/repos/test-owner/test-repo/hooks',
      svn_url: 'https://svn.github.com/test-owner/test-repo',
      homepage: null,
      language: null,
      forks_count: 5,
      stargazers_count: 10,
      watchers_count: 10,
      size: 0,
      default_branch: 'main',
      open_issues_count: 0,
      is_template: false,
      topics: [],
      has_issues: true,
      has_projects: true,
      has_wiki: true,
      has_pages: false,
      has_downloads: true,
      archived: false,
      disabled: false,
      visibility: 'public',
      pushed_at: '2023-01-01T00:00:00Z',
      created_at: '2023-01-01T00:00:00Z',
      updated_at: '2023-01-01T00:00:00Z',
      permissions: {
        admin: true,
        push: true,
        pull: true,
      },
      allow_rebase_merge: true,
      template_repository: null,
      temp_clone_token: null,
      allow_squash_merge: true,
      allow_auto_merge: false,
      delete_branch_on_merge: false,
      allow_merge_commit: true,
      subscribers_count: 0,
      network_count: 0,
      license: null,
      organization: null,
      parent: undefined,
      source: undefined,
      description: 'Test repository',
      has_discussions: false,
      forks: 5,
      open_issues: 0,
      watchers: 10,
    };

    const mockContents = [
      {
        type: 'file' as const,
        encoding: 'base64',
        size: 10,
        name: 'test.txt',
        path: 'test.txt',
        content: 'dGVzdCBjb250ZW50',
        sha: 'abc123',
        url: 'https://api.github.com/repos/test-owner/test-repo/contents/test.txt',
        git_url: 'https://api.github.com/repos/test-owner/test-repo/git/blobs/abc123',
        html_url: 'https://github.com/test-owner/test-repo/blob/main/test.txt',
        download_url: 'https://raw.githubusercontent.com/test-owner/test-repo/main/test.txt',
        _links: {
          self: 'https://api.github.com/repos/test-owner/test-repo/contents/test.txt',
          git: 'https://api.github.com/repos/test-owner/test-repo/git/blobs/abc123',
          html: 'https://github.com/test-owner/test-repo/blob/main/test.txt',
        },
      },
    ];

    const octokitResponse = (data: any) => ({
      data,
      status: 200 as 200,
      url: 'https://api.github.com/',
      headers: {},
    });

    jest.spyOn(mockOctokit.repos, 'get').mockResolvedValue(octokitResponse(mockRepoData));
    jest.spyOn(mockOctokit.repos, 'getContent').mockResolvedValue(octokitResponse(mockContents));

    const result = await githubService.fetchRepository({ owner: 'test-owner', repo: 'test-repo' });

    expect(result.name).toBe('test-repo');
    expect(result.files).toHaveLength(1);
    expect(result.files[0].path).toBe('test.txt');
    expect(result.files[0].content).toBe('test content');
  });

  it('should handle errors correctly', async () => {
    const mockRepoData = {
      id: 1,
      node_id: 'node1',
      name: 'test-repo',
      full_name: 'test-owner/test-repo',
      owner: {
        login: 'test-owner',
        id: 1,
        node_id: 'owner1',
        avatar_url: 'https://example.com/avatar.png',
        url: 'https://api.github.com/users/test-owner',
        html_url: 'https://github.com/test-owner',
        type: 'User',
        gravatar_id: null,
        followers_url: 'https://api.github.com/users/test-owner/followers',
        following_url: 'https://api.github.com/users/test-owner/following{/other_user}',
        gists_url: 'https://api.github.com/users/test-owner/gists{/gist_id}',
        starred_url: 'https://api.github.com/users/test-owner/starred{/owner}{/repo}',
        subscriptions_url: 'https://api.github.com/users/test-owner/subscriptions',
        organizations_url: 'https://api.github.com/users/test-owner/orgs',
        repos_url: 'https://api.github.com/users/test-owner/repos',
        events_url: 'https://api.github.com/users/test-owner/events{/privacy}',
        received_events_url: 'https://api.github.com/users/test-owner/received_events',
        site_admin: false,
      },
      private: false,
      html_url: 'https://github.com/test-owner/test-repo',
      fork: false,
      url: 'https://api.github.com/repos/test-owner/test-repo',
      archive_url: 'https://api.github.com/repos/test-owner/test-repo/{archive_format}{/ref}',
      assignees_url: 'https://api.github.com/repos/test-owner/test-repo/assignees{/user}',
      blobs_url: 'https://api.github.com/repos/test-owner/test-repo/git/blobs{/sha}',
      branches_url: 'https://api.github.com/repos/test-owner/test-repo/branches{/branch}',
      collaborators_url: 'https://api.github.com/repos/test-owner/test-repo/collaborators{/collaborator}',
      comments_url: 'https://api.github.com/repos/test-owner/test-repo/comments{/number}',
      commits_url: 'https://api.github.com/repos/test-owner/test-repo/commits{/sha}',
      compare_url: 'https://api.github.com/repos/test-owner/test-repo/compare/{base}...{head}',
      contents_url: 'https://api.github.com/repos/test-owner/test-repo/contents/{+path}',
      contributors_url: 'https://api.github.com/repos/test-owner/test-repo/contributors',
      deployments_url: 'https://api.github.com/repos/test-owner/test-repo/deployments',
      downloads_url: 'https://api.github.com/repos/test-owner/test-repo/downloads',
      events_url: 'https://api.github.com/repos/test-owner/test-repo/events',
      forks_url: 'https://api.github.com/repos/test-owner/test-repo/forks',
      git_commits_url: 'https://api.github.com/repos/test-owner/test-repo/git/commits{/sha}',
      git_refs_url: 'https://api.github.com/repos/test-owner/test-repo/git/refs{/sha}',
      git_tags_url: 'https://api.github.com/repos/test-owner/test-repo/git/tags{/sha}',
      git_url: 'git://github.com/test-owner/test-repo.git',
      issue_comment_url: 'https://api.github.com/repos/test-owner/test-repo/issues/comments{/number}',
      issue_events_url: 'https://api.github.com/repos/test-owner/test-repo/issues/events{/number}',
      issues_url: 'https://api.github.com/repos/test-owner/test-repo/issues{/number}',
      keys_url: 'https://api.github.com/repos/test-owner/test-repo/keys{/key_id}',
      labels_url: 'https://api.github.com/repos/test-owner/test-repo/labels{/name}',
      languages_url: 'https://api.github.com/repos/test-owner/test-repo/languages',
      merges_url: 'https://api.github.com/repos/test-owner/test-repo/merges',
      milestones_url: 'https://api.github.com/repos/test-owner/test-repo/milestones{/number}',
      notifications_url: 'https://api.github.com/repos/test-owner/test-repo/notifications{?since,all,participating}',
      pulls_url: 'https://api.github.com/repos/test-owner/test-repo/pulls{/number}',
      releases_url: 'https://api.github.com/repos/test-owner/test-repo/releases{/id}',
      ssh_url: 'git@github.com:test-owner/test-repo.git',
      stargazers_url: 'https://api.github.com/repos/test-owner/test-repo/stargazers',
      statuses_url: 'https://api.github.com/repos/test-owner/test-repo/statuses/{sha}',
      subscribers_url: 'https://api.github.com/repos/test-owner/test-repo/subscribers',
      subscription_url: 'https://api.github.com/repos/test-owner/test-repo/subscription',
      tags_url: 'https://api.github.com/repos/test-owner/test-repo/tags',
      teams_url: 'https://api.github.com/repos/test-owner/test-repo/teams',
      trees_url: 'https://api.github.com/repos/test-owner/test-repo/git/trees{/sha}',
      clone_url: 'https://github.com/test-owner/test-repo.git',
      mirror_url: null,
      hooks_url: 'https://api.github.com/repos/test-owner/test-repo/hooks',
      svn_url: 'https://svn.github.com/test-owner/test-repo',
      homepage: null,
      language: null,
      forks_count: 5,
      stargazers_count: 10,
      watchers_count: 10,
      size: 0,
      default_branch: 'main',
      open_issues_count: 0,
      is_template: false,
      topics: [],
      has_issues: true,
      has_projects: true,
      has_wiki: true,
      has_pages: false,
      has_downloads: true,
      archived: false,
      disabled: false,
      visibility: 'public',
      pushed_at: '2023-01-01T00:00:00Z',
      created_at: '2023-01-01T00:00:00Z',
      updated_at: '2023-01-01T00:00:00Z',
      permissions: {
        admin: true,
        push: true,
        pull: true,
      },
      allow_rebase_merge: true,
      template_repository: null,
      temp_clone_token: null,
      allow_squash_merge: true,
      allow_auto_merge: false,
      delete_branch_on_merge: false,
      allow_merge_commit: true,
      subscribers_count: 0,
      network_count: 0,
      license: null,
      organization: null,
      parent: undefined,
      source: undefined,
      description: 'Test repository',
      has_discussions: false,
      forks: 5,
      open_issues: 0,
      watchers: 10,
    };

    const mockContents = [
      {
        type: 'file' as const,
        encoding: 'base64',
        size: 10,
        name: 'test.txt',
        path: 'test.txt',
        content: 'dGVzdCBjb250ZW50',
        sha: 'abc123',
        url: 'https://api.github.com/repos/test-owner/test-repo/contents/test.txt',
        git_url: 'https://api.github.com/repos/test-owner/test-repo/git/blobs/abc123',
        html_url: 'https://github.com/test-owner/test-repo/blob/main/test.txt',
        download_url: 'https://raw.githubusercontent.com/test-owner/test-repo/main/test.txt',
        _links: {
          self: 'https://api.github.com/repos/test-owner/test-repo/contents/test.txt',
          git: 'https://api.github.com/repos/test-owner/test-repo/git/blobs/abc123',
          html: 'https://github.com/test-owner/test-repo/blob/main/test.txt',
        },
      },
    ];

    const octokitResponse = (data: any) => ({
      data,
      status: 200 as 200,
      url: 'https://api.github.com/',
      headers: {},
    });

    jest.spyOn(mockOctokit.repos, 'get').mockRejectedValue({ status: 404, message: 'Not Found' });

    await expect(githubService.fetchRepository({ owner: 'test-owner', repo: 'test-repo' })).rejects.toEqual({
      message: 'Not Found',
      status: 404,
    });
  });
}); 